import image1 from '../../asset/yata구조.png';import { IProject } from '../../component/project/IProject';export const pageone: IProject.Item = {  title: '물류 플랫폼 자동화 서비스',  startedAt: '2024-02',  // endedAt: '2024-08',  where: 'Grit Standard (백엔드 개발자, 6인 팀)',  descriptions: [    {      content:        '기술 스택: Java, SpringBoot, JPA Hibernate, QueryDSL, AWS Lambda, MySQL, AWS S3, EKS',      weight: 'BOLD',      descriptions: [        {          content: '프로젝트 개요',          weight: 'MEDIUM',          descriptions: [            {              content:                '세관과 연동된 데이터 확보 및 <b>신고 자동화 시스템</b> 구축을 목표로 하여, 물류 데이터를 효율적으로 처리하는 플랫폼 개발.',            },            {              content:                '<b>AI 기반 PDF 분석 시스템</b>을 구축하여, 기존 수작업 처리 프로세스를 개선하고 자동화함으로써 업무 효율성 극대화.',            },          ],        },        {          content: '주요 성과',          weight: 'MEDIUM',          descriptions: [            {              content:                '세관 처리 속도가 기존 대비 <b>2배 향상</b>되었으며, 자동화 시스템으로 데이터 정확도 및 처리 효율성 크게 개선.',            },            {              content:                'AWS Lambda SnapStart 도입으로 Cold Start 시간을 <b>10초에서 1초로 단축</b>하여 시스템 응답성 대폭 향상.',            },          ],        },        {          content: '담당 역할 및 기술적 성과',          weight: 'MEDIUM',          descriptions: [            {              content: '백엔드 시스템 설계 및 개발',              descriptions: [                {                  content:                    '<b>레거시 물류 도메인의 최신화 설계 및 개발</b>에 기여하여, 기존 시스템을 현대화.',                },                {                  content:                    '약 <b>400개 이상의 필드</b>를 포함하는 테이블의 정규화 및 이를 기반으로 한 CRUD 기능 개발.',                },                {                  content:                    '<b>SpringBoot와 JPA Hibernate</b>를 활용한 견고한 백엔드 아키텍처 구축.',                },                {                  content:                    '<b>QueryDSL</b>을 활용한 타입 안전 쿼리 구현으로 코드 품질 및 유지보수성 향상.',                },              ],            },            {              content: 'AI 기반 문서 처리 시스템 구현',              descriptions: [                {                  content:                    '물류 인보이스 PDF를 <b>AI로 분석</b>하여, 데이터를 추출하고 DB에 저장하는 시스템 구축.',                },                {                  content:                    '추출된 데이터를 활용한 <b>세관 신고서 자동화 시스템</b> 개발로 업무 프로세스 혁신.',                },                {                  content:                    '<b>Libre Office Lambda Layer</b>를 활용하여 여러 형태의 문서를 PDF로 변환하는 기능을 개발, PDF 변환 시스템의 확장성을 확보.',                },              ],            },            {              content: '클라우드 인프라 최적화',              descriptions: [                {                  content:                    '<b>AWS Lambda</b>를 활용한 문서 자동화 모듈을 개발하였으며, <b>Java Lambda SnapStart</b> 도입으로 Java 애플리케이션의 성능 문제 해결.',                },                {                  content: '<b>AWS EKS</b>를 활용한 컨테이너 기반 애플리케이션 배포 환경 구축.',                },                {                  content: '<b>AWS S3</b>를 활용한 효율적인 문서 저장 및 관리 시스템 구현.',                },              ],            },            {              content: '데이터 마이그레이션 및 문서화',              descriptions: [                {                  content:                    '기존 고객 데이터를 <b>SQL Migration 스크립트</b>를 통해 안전하게 마이그레이션.',                },                {                  content:                    '<b>Restdocs 및 Swagger</b>를 활용한 API 문서화를 통해 개발자 및 외부 인원과의 협업을 용이하게 함.',                },              ],            },          ],        },        {          content: '기술적 도전과 해결 방안',          weight: 'MEDIUM',          descriptions: [            {              content: 'Lambda 성능 최적화',              descriptions: [                {                  content:                    '<b>Lambda SnapStart</b>를 통해 Cold Start 시간을 <b>10초에서 1초로 단축</b>하여 성능 문제를 극복.',                },                {                  content: '메모리 할당 최적화 및 코드 효율성 개선을 통한 <b>실행 시간 단축</b>.',                },              ],            },            {              content: '대용량 데이터 처리',              descriptions: [                {                  content:                    '<b>400개 이상의 필드</b>를 가진 복잡한 데이터 구조를 효율적으로 정규화하여 데이터 중복 최소화 및 조회 성능 향상.',                },                {                  content:                    '<b>배치 처리 및 비동기 프로세싱</b>을 통한 대용량 문서 처리 시스템 구현.',                },              ],            },          ],        },      ],    },  ],  image: image1,};