import image1 from '../../asset/yata구조.png';import { IProject } from '../../component/project/IProject';export const aimsWeb: IProject.Item = {  title: '물류 ERP : Python, FastAPI, AWS, Docker, Kubernetes, MySQL',  startedAt: '2023-08',  endedAt: '2024-08',  where: 'Grit Standard',  descriptions: [    {      content: '[사내 물류 ERP]: Python, FastAPI, AWS, Docker, Kubernetes, MySQL',      weight: 'MEDIUM',      descriptions: [        {          content: '목적',          weight: 'MEDIUM',          descriptions: [            {              content:                '기존 Windows 환경의 ERP 시스템을 클라우드 기반의 웹 환경으로 이전하여 운영 효율성을 극대화하고, 각 팀 간의 업무 분담을 체계적으로 관리하기 위한 프로젝트.',            },            {              content:                '이메일 전송 기능을 자동화하고, 기존 Windows 기반 솔루션을 웹 기반 솔루션으로 변환하여, 유지보수와 확장성 문제를 해결하는 것이 주요 목적.',            },          ],        },        {          content: '결과',          weight: 'MEDIUM',          descriptions: [            {              content:                '분업화로 인해 업무 처리 속도가 30% 이상 향상되었고, 한 달 안건 처리량이 크게 증가. 또한, 팀 간의 업무 분담이 명확해져 협업의 효율성이 극대화됨.',            },          ],        },        {          content: '역할 및 성과',          weight: 'MEDIUM',          descriptions: [            {              content:                '백엔드 1인 진행으로 프론트엔드 팀과 긴밀하게 소통하며 프로젝트를 원활하게 진행. 모든 기능 요구사항을 분석하고, 새로운 아키텍처로의 이전을 주도.',            },            {              content:                '실무 담당자 및 기존 Windows 개발자들과의 협업을 통해 요구사항을 파악하고, 성능 향상과 확장성을 고려한 솔루션을 제안.',            },            {              content:                'AWS Kubernetes 클러스터 운영을 통해 확장성과 가용성을 확보하고, 인프라 비용 최적화를 실현.',            },            {              content:                'ArgoCD를 활용한 GitOps 기반 CI/CD 파이프라인 구축으로 배포 자동화 및 개발 프로세스 효율성 강화.',            },          ],        },      ],    },  ],  image: image1,};